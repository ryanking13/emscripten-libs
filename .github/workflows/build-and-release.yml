name: Build and Release Static Packages

on:
  workflow_dispatch:
    inputs:
      library:
        description: 'Package to build and release'
        required: true
        type: string
      release_tag:
        description: 'Release tag (optional, will auto-generate if not provided)'
        required: false
        type: string
      dry_run:
        description: 'Dry run (build but do not release)'
        required: false
        type: boolean
        default: false

  pull_request:
    paths:
      - 'packages/**'

jobs:
  build-and-release:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout Repository
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8  # v5.0.0
        with:
          fetch-depth: 0  # Fetch full history for proper versioning

      - name: Set Up Python
        uses: actions/setup-python@e797f83bcb11b83ae66e0230d6156d7c80228e7c  # v6.0
        with:
          python-version: '3.13'

      - name: Install Python Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pyodide-build

      - name: Set Up Emscripten
        uses: mymindstorm/setup-emsdk@6ab9eb1bda2574c4ddb79809fc9247783eaf9021  # v14
        with:
          # Hypothesis: The emscripten version for static library should not matter
          #             unless there is a binary level incompatibility (e.g. wasm-eh).
          #             So we test the latest Emscripten version instead of the one
          #             matching Pyodide.
          version: '4.0.15'
          actions-cache-folder: 'emsdk-cache'

      - name: Verify Emscripten Installation
        run: |
          emcc --version
      
      - name: Verify pyodide-build Installation
        run: |
          which pyodide

      - name: Build and Release (Manual Trigger)
        if: github.event_name == 'workflow_dispatch'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          pyodide build-recipes "${{ github.event.inputs.library }}"

      - name: Calculate recipes to build (pull_request)
        if: github.event_name == 'pull_request'
        id: calculate_recipes_pr
        env:
          GITHUB_EVENT_PULL_REQUEST_BASE_REF: ${{ github.event.pull_request.base.ref }}
        run: |
          export CHANGED_RECIPES=$(python ./tools/calc_diff.py \
            --base origin/${GITHUB_EVENT_PULL_REQUEST_BASE_REF} \
            --target ${{ github.sha }})

          echo "Changed recipes: $CHANGED_RECIPES"
          echo "recipes=${CHANGED_RECIPES}" >> $GITHUB_OUTPUT
      
      - name: Build and Release (Pull Request Trigger)
        if: github.event_name == 'pull_request'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          pyodide build-recipes "${{ steps.calculate_recipes_pr.outputs.recipes }}"

      - name: Upload Build Artifacts
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02  # v4.6.2
        if: always()
        with:
          name: build-artifacts-${{ github.event.inputs.library || 'auto' }}
          path: |
            build/
            dist/
            *.log
          retention-days: 30

      - name: Upload Release Assets
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02  # v4.6.2
        if: success() && !github.event.inputs.dry_run
        with:
          name: release-assets-${{ github.event.inputs.library || 'auto' }}
          path: |
            releases/
          retention-days: 90
